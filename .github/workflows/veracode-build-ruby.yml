name: Veracode Build Ruby Code Package

on:
  workflow_call:
    inputs:
      repository:
        required: true
        type: string
      ref:
        required: true
        type: string
      token:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest           #${{ vars.CLIENT_ENV || 'ubuntu-latest' }}
    container:
      image: docker:latest     #adeshlahara/veracode:latest      #${{ vars.CLIENT_IMAGE_URL || 'veracode/scm-packaging' }}:${{ vars.CLIENT_IMAGE_TAG || '2.1.0' }}
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.ref }}
        token: ${{ inputs.token }}

    - uses: actions/checkout@v4
      with:
        path: 'veracode-helper'

    - name: Package the application
      id: application_package
      env:
        VERACODE_API_KEY_ID: '${{ secrets.VERACODE_API_ID }}'
        VERACODE_API_KEY_SECRET: '${{ secrets.VERACODE_API_KEY }}'
      run: |
        cd veracode-helper/helper/cli
        cliFile=$(ls -1 . | head -n 1)
        cliFileName=$(echo "$cliFile" | cut -c 1-$((${#cliFile}-7)))
        tar -zxvf $cliFile
        cd $cliFileName
        export PATH="veracode-helper/helper/cli/$cliFileName:$PATH"
        #cd /__w/veracode/veracode
        cd /
        mkdir test1
        cd test1
        cp -r /__w/veracode/veracode .
        chmod 777 *
        ls -lart
        #veracode package --source . --output veracode-artifacts --trust --debug
        docker pull veracode/scm-packaging:2.1.0
        docker run -v /test1:/files veracode/scm-packaging:2.1.0 ls -lart /files
        docker run -v /test1:/files veracode/scm-packaging:2.1.0 ls -lart /files/veracode-helper
        #docker run -v /__w/veracode/veracode:/files veracode/scm-packaging:2.1.0 ls -lart /files/veracode-helper/helper
        #docker run -v /__w/veracode/veracode:/files veracode/scm-packaging:2.1.0 ls -lart /files/veracode-helper/helper/cli
        
        #docker run -v /__w/veracode/veracode:/files veracode/scm-packaging:2.1.0 /files/veracode-helper/helper/cli/$cliFileName/veracode package --source /files --output /files/veracode-artifacts --trust --debug
        
        zip veracode-artifact.zip veracode-artifacts/* -x .zip .tar .tar.gz .gz

    - name: Package error
      if: failure() && steps.application_package.outcome == 'failure'
      run: |
        echo "::error::Veracode static scan faced a problem. Please contact your Veracode administrator for more information."

    - uses: actions/upload-artifact@v4
      with:
        name: veracode-artifact
        path: /__w/veracode/veracode/veracode-artifacts/*
        if-no-files-found: error

    # - name: Package the application
    #   id: application_package
    #   env:
    #     VERACODE_API_KEY_ID: '${{ secrets.VERACODE_API_ID }}'
    #     VERACODE_API_KEY_SECRET: '${{ secrets.VERACODE_API_KEY }}'
    #   run: |
    #     cd veracode-helper/helper/cli
    #     echo "veracode-helper/helper/cli"
    #     ls -lart
    #     cliFile=$(ls -1 . | head -n 1)
    #     cliFileName=$(echo "$cliFile" | cut -c 1-$((${#cliFile}-7)))
    #     tar -zxvf $cliFile
    #     cd $cliFileName
    #     export PATH="veracode-helper/helper/cli/$cliFileName:$PATH"
    #     cd /__w/veracode
    #     echo "/__w/veracode"
    #     ls -lart
    #     echo "/__w/veracode/veracode"
    #     cd /__w/veracode/veracode
    #     ls -lart
    #     echo ls -lart
    #     veracode package --source . --output veracode-artifacts --trust --debug
    #     zip veracode-artifact.zip veracode-artifacts/* -x .zip .tar .tar.gz .gz

    # - name: Package error
    #   if: failure() && steps.application_package.outcome == 'failure'
    #   run: |
    #     echo "::error::Veracode static scan faced a problem. Please contact your Veracode administrator for more information."

    # - uses: actions/upload-artifact@v4
    #   with:
    #     name: veracode-artifact
    #     path: /__w/veracode/veracode/veracode-artifacts/*
    #     if-no-files-found: error
    
    #- name: Cache bundle dependencies
    #    uses: actions/cache@v3
    #    with:
    #      path: vendor/bundle
    #      key: ${{ runner.os }}-bundle-${{ hashFiles('**/Gemfile.lock') }}
    #      restore-keys: |
    #        ${{ runner.os }}-bundle-

    #- name: Install Dependencies
    #    run: bundle install --path vendor/bundle

    #- name: Package the Gem
    #    run: gem build ${{ inputs.repository }}.gemspec

    #- uses: actions/upload-artifact@v4
    #    with:
    #      name: veracode-artifact
    #      path: veracode.gem